// —————————————————————————————————————————————————————————————————————————————
// DO NOT EDIT THIS FILE!
// —————————————————————————————————————————————————————————————————————————————

import { test } from "uvu";
import * as assert from "uvu/assert";
import { createContext } from "./context_chain.mjs";

test("creates a context", () => {
  let ctx = createContext({ foo: 1 });

  assert.is(ctx.foo, 1);
});

test("creates a child context", () => {
  let parent = createContext({ foo: 1 });
  let child = createContext(parent, { bar: 2 });

  assert.is(parent.foo, 1);
  assert.not(parent.bar);
  assert.is(child.foo, 1);
  assert.is(child.bar, 2);
});

test("inherits properties from parent context", () => {
  let parent = createContext({ foo: 1 });
  let child = createContext(parent);

  assert.is(child.foo, 1);

  parent.foo = 2;
  parent.bar = 2;
  assert.is(child.foo, 2);
  assert.is(child.bar, 2);

  child.foo = 3;
  assert.is(child.foo, 3);
  assert.is(parent.foo, 2);

  delete child.foo;
  assert.is(child.foo, parent.foo);
});

test("creates a context hierarchy", () => {
  let ancestor = createContext({ foo: 1 });
  let parent = createContext(ancestor);
  let child = createContext(parent);

  assert.is(child.foo, ancestor.foo);

  parent.foo = 2;
  assert.is(parent.foo, 2);
  assert.is(child.foo, parent.foo);
});

test.run();
